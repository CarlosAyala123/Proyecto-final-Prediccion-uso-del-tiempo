data_frame<- data_frame %>% mutate(ln_ingtot=ln(ingtot))
#Libraries
require(rvest)
require(readr)
require(tidyverse)
require(xlsx)
require(Hmisc)
require(dplyr)
##install.packages("ggrepel")
require("ggplot2")
require("ggrepel")
require("stargazer")
#install.packages("skimr")
require("stargazer")
require(skimr) #summary data
data_frame <- read.csv(file="C:\\Users\\caaya\\OneDrive - Universidad de los Andes\\universidad\\8 semestre\\BigData\\Problem sets\\Problem set 1\\Problem-set-1-\\trial.csv")
data_frame<- data_frame %>% mutate(ln_ingtot=ln(ingtot))
data_frame<- data_frame %>% mutate(ln_ingtot=log(ingtot))
model2<-lm(data=data_frame, ln_ingtot~female)
tabyl(data_frame$sex)
#install.packages("foreign")
#install.packages('arm')
library("foreign")
library("tidyr")
library("dplyr")
#install.packages("car")
#install.packages("stringi")
library(car)
library(arm)
tabyl(data_frame$sizeFirm)
## Cargamos los paquetes
library(pacman)
tabyl(data_frame$sizeFirm)
p_load(tidyverse, rio , skimr , fastDummies, caret, glmnet, MLmetrics , janitor)
tabyl(data_frame$sizeFirm)
tabyl(data_frame$sex)
model2<-lm(data=data_frame, ln_ingtot~sex)
tabyl(data_frame$ln_ingtot)
model2<-lm(data=data_frame, ln_ingtot~sex)
tabyl(data_frame$sex)
p_load(rvest, rvest, readr, tidyverse, xlsx, Hmsic, dplyr, ggplot2, ggrepel, stargazer, skimr)
#Clean enviroment
rm(list = ls())
#Libraries
library(pacman)
p_load(rvest, rvest, readr, tidyverse, xlsx, Hmsic, dplyr, ggplot2, ggrepel, stargazer, skimr)
#Clean enviroment
rm(list = ls())
#Libraries
library(pacman)
p_load(rvest, rvest, readr, tidyverse, xlsx, dplyr, ggplot2, ggrepel, stargazer, skimr)
data_frame <- read.csv(file="C:\\Users\\caaya\\OneDrive - Universidad de los Andes\\universidad\\8 semestre\\BigData\\Problem sets\\Problem set 1\\Problem-set-1-\\trial.csv")
## 75% of the sample size
smp_size <- floor(0.75 * nrow(data_frame))
## set the seed to make your partition reproducible
set.seed(10101)
train_ind <- sample(seq_len(nrow(data_frame)), size = smp_size)
train <- data_frame[train_ind, ]
test <- data_frame[-train_ind, ]
#Clean enviroment
rm(list = ls())
data_frame <- read.csv(file="C:\\Users\\caaya\\OneDrive - Universidad de los Andes\\universidad\\8 semestre\\BigData\\Problem sets\\Problem set 1\\Problem-set-1-\\trial.csv")
### Splitting the sample
## 75% of the sample size
smp_size <- floor(0.75 * nrow(data_frame))
## set the seed to make your partition reproducible
set.seed(10101)
train_ind <- sample(seq_len(nrow(data_frame)), size = smp_size)
train <- data_frame[train_ind, ]
test <- data_frame[-train_ind, ]
#Clean enviroment
rm(list = ls())
#Clean enviroment
rm(list = ls())
#Libraries
library(pacman)
p_load(rvest, rvest, readr, tidyverse, dplyr, ggplot2, ggrepel, stargazer, skimr, janitor, MLmetrics, caret)
data_frame <- read.csv(file="C:\\Users\\caaya\\OneDrive - Universidad de los Andes\\universidad\\8 semestre\\BigData\\Problem sets\\Problem set 1\\Problem-set-1-\\trial.csv")
## 75% of the sample size
smp_size <- floor(0.75 * nrow(data_frame))
## set the seed to make your partition reproducible
set.seed(10101)
train_ind <- sample(seq_len(nrow(data_frame)), size = smp_size)
train <- data_frame[train_ind, ]
test <- data_frame[-train_ind, ]
#Clean enviroment
rm(list = ls())
#Libraries
library(pacman)
p_load(rvest, rvest, readr, tidyverse, dplyr, ggplot2, ggrepel, stargazer, skimr, janitor, MLmetrics, caret)
data_frame <- read.csv(file="C:\\Users\\caaya\\OneDrive - Universidad de los Andes\\universidad\\8 semestre\\BigData\\Problem sets\\Problem set 1\\Problem-set-1-\\trial.csv")
df<-data_frame
rm(data_frame)
## 75% of the sample size
smp_size <- floor(0.75 * nrow(df))
## set the seed to make your partition reproducible
set.seed(10101)
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
train<- train %>% mutate(age_2 =age * age)
model1<-lm(data=train, ingtot~age + age_2)
coef1 <- model1$coefficients ## Extraer coeficientes
coef1
Yhat1 <- model1$fitted.values
stargazer(model1, type = "text")
df<- data_frame %>%
mutate(age_2 =age * age)
df<- df %>%
mutate(age_2 =age * age)
modelEA<-lm(data=df, ingtot~age + age_2) ## Regression
Coef <- modelEA$coefficients ## Extraer coeficientes
Coef
Yhat <- modelEA$fitted.values
#Clean enviroment
rm(list = ls())
#Libraries
library(pacman)
p_load(rvest, rvest, readr, tidyverse, dplyr, ggplot2, ggrepel, stargazer, skimr, janitor, MLmetrics, caret)
data_frame <- read.csv(file="C:\\Users\\caaya\\OneDrive - Universidad de los Andes\\universidad\\8 semestre\\BigData\\Problem sets\\Problem set 1\\Problem-set-1-\\trial.csv")
df<-data_frame
rm(data_frame)
## 75% of the sample size
smp_size <- floor(0.75 * nrow(df))
## set the seed to make your partition reproducible
set.seed(10101)
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
train<- train %>% mutate(age_2 =age * age)
model1<-lm(data=train, ingtot~age + age_2)
coef1 <- model1$coefficients ## Extraer coeficientes
coef1
Yhat1 <- model1$fitted.values
stargazer(model1, type = "text")
train<- train %>% mutate(ln_ingtot=log(ingtot))
model2<-lm(data=train, ln_ingtot~sex)
train$female <- ifelse(train$sex==1,0,1)
model2 <- lm(data=df,log_inc~female)
model2 <- lm(data=train,log_inc~female)
model2 <- lm(data=train,ln_ingtot~female)
is.missing(train$ln_ingtot)
is.na(train$ln_ingtot)
which(is.na(train$ln_ingtot))
model2 <- lm(data=train,ln_ingtot~female)
data("Affairs")
require("AER")
install.packages("AER")
require("AER")
data("Affairs")
View(Affairs)
?Affairs
Affairs$affairs
factor(Affairs$affairs,
levels= c(0, 1, 2, 3, 7, 12),
labels = c("Nunca", "Una vez", "Dos veces", "Tres veces",
"4 a 5 veces", "> 10 veces"))
library(ggplot)
library(ggplot2)
ggplot(Affairs, aes(x= affairs)) +
geom_bar
ggplot(Affairs, aes(x= affairs)) +
geom_bar() +
coord_flip()
## genera var infiel
Affairs$infiel <- Affairs$affairs != "Nunca"
table(Affairs$infiel)
prop.table(table(Affairs$infiel))
rm(list = ls())
library(pacman)
head(df)
p_load(tidyverse)
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv")
head(df)
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$LIMIT=10000
head(df)
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$LIMIT=10000")
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$LIMIT=10000")
head(df)
rm(list = ls())
library(pacman)
p_load(tidyverse)
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$LIMIT=10000")
head(df)
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$LIMIT=10000")
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$SELECT=fecha_reporte_web,departamento")
head(df)
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$LIMIT=10000")
head(df)
# Importar variables transformadas
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$SELECT=fecha_diagnostico,COUNT=(fecha_diagnostico)&$group=fecha_diagnostico")
# Importar variables transformadas
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$SELECT=fecha_diagnostico, COUNT=(fecha_diagnostico)&$group=fecha_diagnostico")
# Importar variables transformadas
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$SELECT=fecha_diagnostico,COUNT=(fecha_diagnostico)&$group=fecha_diagnostico")
rm(list = ls())
# Importar variables transformadas
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$SELECT=fecha_diagnostico,COUNT=(fecha_diagnostico)&$group=fecha_diagnostico")
# Importar variables específicas
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$SELECT=fecha_reporte_web,departamento")
# Importar variables transformadas
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$SELECT=fecha_diagnostico,COUNT=(fecha_diagnostico)&$GROUP=fecha_diagnostico")
# Importar variables transformadas
df<- read.csv("https://www.datos.gov.co/resource/gt2j-8ykr.csv?$SELECT=fecha_diagnostico,COUNT=(fecha_diagnostico)&$GROUP=fecha_diagnostico")
df<- read.csv("https://www.datos.gov.co/resource/epsv-yhtj.csv")
glimpse(df)
is.na(df) ## muestra missing
colSums(is.na(df)) ## muestra missing
unique(df$cod_ase_)
df$cod_ase_ <- NULL ## asigna null y elimina la var
table(df$tipo_de_seguridad_social)
df$strato %>%
table(useNA = "infany") %>%
prop.table() %>%
round(3) * 100
df$strato %>%
table(useNA = "ifany") %>%
prop.table() %>%
round(3) * 100
df$estrato %>%
table(useNA = "ifany") %>%
prop.table() %>%
round(3) * 100
df %>%
select(edad_, uni_med_, grupo_etario, sexo, area, num_comuna,
tipo_de_seguridad_social, estrato, edema, delgadez,
oiel_reseca, hiperpigm, cambios_cabello, palidez, zscorept_aprox,
interpretaci_n_zscore_pt)
table(df$uni_med_)
df$edad[df$uni_med_ == 1]
df$edad[df$uni_med_ == 1] * 365
df$edad[df$uni_med_ == 2] * 30
df$uni_med_ <- NULL
var_dicotomas <- c("edema" , "delgadez", "oiel_reseca",
"hiperpigm", "cambios_cabello", "palidez")
df[,var_dicotomas] = df[, var_dicotomas] - 1
df[,var_dicotomas] <- df[, var_dicotomas] - 1
var_cat <- c("grupo_etario", "sexo", "area_", "num_comuna",
"tipo_de_seguridad_social", "estrato", "edema",
"delgadez", "oiel_reseca", "hiperpigm", "cambios_cabello",
"palidez", "interpretaci_n_zscore_pt")
df[,v] <- as.factor(df[, v, dropt = T])
for (v in var_cat) {
df[,v] <- as.factor(df[, v, dropt = T])
}
df[,v] <- as.factor(df[, v, drop = T])
glimpse(df)
for (v in var_cat) {
df[,v] <- as.factor(df[, v, drop = T])
}
glimpse(df)
ggplot(df, aes(x = edad_, y = zscorept_aprox,
color = interpretaci_n_zscore_pt)) +
geom_point() +
theme_bw() +
labs(x = "Edad en días", y = "Puntaje de desnutrición") +
scale_color_discrete(name = "Interpretación") +
theme(legend.position="bottom")
df$zscorept_aprox <- -df$zscorept_aprox
df2 <- model.matrix(~ zscorept_aprox + edad_  +
grupo_etario + sexo + area_ + num_comuna +
tipo_de_seguridad_social + estrato +
edema + delgadez + oiel_reseca +
hiperpigm + cambios_cabello + palidez, df) %>%
as.data.frame()
view(df2)
ggplot(df2, aes(x = zscorept_aprox)) +
geom_histogram(bins = 50, fill = "darkblue") +
labs(x = "Puntaje de desnutrición", y = "Cantidad") +
theme_bw()
rm(list = ls())
require("AER")
library("AER")
data("Affairs")
View(Affairs)
Affairs$affairs## revisa la var
##Convertir affairs en categorica
factor(Affairs$affairs,
levels= c(0, 1, 2, 3, 7, 12),
labels = c("Nunca", "Una vez", "Dos veces", "Tres veces",
"4 a 5 veces", "> 10 veces"))
ggplot(Affairs, aes(x= affairs)) +
geom_bar() +
coord_flip()
## distribución de la marca (Y)
table(Affairs$infiel)
prop.table(table(Affairs$infiel))
## genera var infiel
Affairs$infiel <- Affairs$affairs != "Nunca"
## distribución de la marca (Y)
table(Affairs$infiel)
prop.table(table(Affairs$infiel))
data("Affairs")
rm(list = ls())
library("AER")
data("Affairs")
View(Affairs)
##Convertir affairs en categorica
factor(Affairs$affairs,
levels= c(0, 1, 2, 3, 7, 12),
labels = c("Nunca", "Una vez", "Dos veces", "Tres veces",
"4 a 5 veces", "> 10 veces"))
## genera var infiel
Affairs$infiel <- Affairs$affairs != "Nunca"
## distribución de la marca (Y)
table(Affairs$infiel)
ggplot(Affairs, aes(x= affairs)) +
geom_bar() +
coord_flip()
##Convertir affairs en categorica
factor(Affairs$affairs,
levels= c(0, 1, 2, 3, 7, 12),
labels = c("Nunca", "Una vez", "Dos veces", "Tres veces",
"4 a 5 veces", "> 10 veces"))
library(ggplot2)
Affairs$affairs## revisa la var
##Convertir affairs en categorica
factor(Affairs$affairs,
levels= c(0, 1, 2, 3, 7, 12),
labels = c("Nunca", "Una vez", "Dos veces", "Tres veces",
"4 a 10 veces", "> 10 veces"))
rm(list = ls())
library("AER")
data("Affairs")
Affairs$affairs## revisa la var
##Convertir affairs en categorica
factor(Affairs$affairs,
levels= c(0, 1, 2, 3, 7, 12),
labels = c("Nunca", "Una vez", "Dos veces", "Tres veces",
"4 a 10 veces", "> 10 veces"))
library(ggplot2)
ggplot(Affairs, aes(x= affairs)) +
geom_bar() +
coord_flip()
##Convertir affairs en categorica
Affairs$affaris<- factor(Affairs$affairs,
levels = c(0, 1, 2, 3, 7, 12),
labels = c("Nunca", "Una vez", "Dos veces", "Tres veces",
"4 a 10 veces", "> 10 veces"))
ggplot(Affairs, aes(x= affairs)) +
geom_bar() +
coord_flip()
ggplot(Affairs, aes(x= affairs)) +
geom_bar() +
coord_flip()
library(ggplot2)
ggplot(Affairs, aes(x= affairs)) +
geom_bar() +
coord_flip()
ggplot(Affairs, aes(x= affairs)) +
geom_bar() +
coord_flip()
rm(list = ls())
data("Affairs")
Affairs$affairs## revisa la var
table(Affairs$affairs)## revisa la var
##Convertir affairs en categorica
Affairs$affaris<- factor(Affairs$affairs,
levels = c(0, 1, 2, 3, 7, 12),
labels = c("Nunca", "Una vez", "Dos veces", "Tres veces",
"4 a 10 veces", "> 10 veces"))
library(ggplot2)
ggplot(Affairs, aes(x= affairs)) +
geom_bar() +
coord_flip()
ggplot(Affairs, aes(x= affairs)) +
geom_bar() +
coord_flip()
ggplot(Affairs, aes(x= affairs)) +
geom_bar()
##Convertir affairs en categorica
Affairs$affaris<- factor(Affairs$affairs,
levels = c(0, 1, 2, 3, 7, 12),
labels = c("Nunca", "Una vez", "Dos veces", "Tres veces",
"4 a 10 veces", "> 10 veces"))
setwd("C:/Users/caaya/OneDrive - Universidad de los Andes/universidad/8 semestre/BigData/Problem sets/Proyecto Final/Proyecto-final-Prediccion-uso-del-tiempo")
r = T)
read.csv("Data/ENUT_C1/ENUT_C1.csv", header = T)
a <- read.csv("Data/ENUT_C1/ENUT_C1.csv", header = T)
View(a)
skimr
skimr(a)
skim(a)
load(pacman)
require(pacman)
p_load(skimr)
skim(a)
skim(a)
p_load(skimr, readr)
colnames(a) <- tolower(colnames(a))
skim(a)
b <- subset(a, select = -c(p4030s1a1, p4030s4a1, dia_ref, f_exp_viv))
p_load(skimr, reshape)
a <- rename(a, names)
names <- c(vivienda = "directorio", tipo_vivienda = "p424")
a <- rename(a, names)
names <- c(vivienda = "directorio", tipo_vivienda = "p424")
a <- rename(a, names)
View(a)
names <- c(directorio = "vivienda", p424 = "tipo_vivienda")
a <- rename(a, names)
rm(list=ls())
require(pacman)
p_load(skimr, reshape)
a <- read.csv("Data/ENUT_C1/ENUT_C1.csv", header = T)
colnames(a) <- tolower(colnames(a))
skim(a)
a <- subset(a, select = -c(p4030s1a1, p4030s4a1, dia_ref, f_exp_viv))
names <- c(directorio = "vivienda", p424 = "tipo_vivienda")
a <- rename(a, names)
# Cargar las bases
rm(list=ls())
require(pacman)
p_load(skimr, reshape)
a <- read.csv("Data/ENUT_C1/ENUT_C1.csv", header = T)
colnames(a) <- tolower(colnames(a))
skim(a)
a <- subset(a, select = -c(p4030s1a1, p4030s4a1, dia_ref, f_exp_viv)) ## dejar las variables a usar
names <- c(directorio = "vivienda", p424 = "tipo_vivienda") ## vercotr de nombres
a <- rename(a, names) ## asignar nuevo nombre a las variables
